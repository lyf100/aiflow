[tool.pytest.ini_options]
# Pytest配置
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# 输出配置
addopts = [
    "-v",                      # 详细输出
    "--tb=short",              # 简短的traceback
    "--strict-markers",        # 严格标记模式
    "--cov=core",              # 覆盖率测试core模块
    "--cov=commands",          # 覆盖率测试commands模块
    "--cov-report=term-missing", # 显示缺失覆盖的行
    "--cov-report=html",       # 生成HTML报告
]

# 标记
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# 覆盖率配置
[tool.coverage.run]
source = ["core", "commands"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "pass",
]

# Black代码格式化配置
[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # 排除的目录
  \.git
  | \.venv
  | build
  | dist
)/
'''

# isort导入排序配置
[tool.isort]
profile = "black"
line_length = 100
skip = [".git", ".venv", "build", "dist"]

# MyPy类型检查配置
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true